/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hungkd.gui;

import hungkd.dao.itemDAO;
import hungkd.dao.supplierDAO;
import hungkd.dto.itemDTO;
import hungkd.dto.supplierDTO;
import hungkd.model.itemModel;
import hungkd.model.supplierModel;
import hungkd.utils.myConnection;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author PC
 */
public class manager extends javax.swing.JFrame {
    
    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    supplierModel supModel = null;
    itemModel itemModel = null;
    List<supplierDTO> supList = null;
    List<itemDTO> itemList = null;
    supplierDAO sdao = null;
    itemDAO idao = null;
    boolean switcher1 = false;
    boolean switcher2 = false;

    /**
     * Creates new form manager
     */
    public final void closeConnection() throws SQLException {
        if (rs != null) {
            rs.close();
        }
        if (ps != null) {
            ps.close();
        }
        if (conn != null) {
            conn.close();
        }
    }
    
    public manager() throws ClassNotFoundException, IOException {
        initComponents();
        myConnection c = new myConnection();
        try {
            conn = c.getConnection();
        } catch (SQLException | FileNotFoundException ex) {
            Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
        }
        JTextField id = new JTextField();
        JTextField password = new JPasswordField();
        Object[] input = {"User ID ", id, "Password ", password};
        int choice = JOptionPane.showConfirmDialog(null, input, "Login Dialog", JOptionPane.OK_CANCEL_OPTION);
        if (choice == JOptionPane.OK_OPTION) {
            String ID = id.getText();
            String PASSWORD = password.getText();
            String sql = "select userID, password from tblUsers";
            try {
                Statement sm = conn.createStatement();
                rs = sm.executeQuery(sql);
                if (rs.next()) {
                    if (rs.getString("userID").equalsIgnoreCase(ID) && rs.getString("password").equals(PASSWORD)) {
                        JOptionPane.showMessageDialog(this, "user found");
                        sdao = new supplierDAO();
                        sdao.loadDBModel(conn);
                        supModel = new supplierModel();
                        supModel.setList(sdao);
                        tblSupplier.setModel(supModel);
                        //------------------------------------------------------
                        idao = new itemDAO();
                        idao.loadDB(conn, sdao);//fixed
                        itemModel = new itemModel();
                        itemModel.setList(idao);//fixed
                        tblItem.setModel(itemModel);
                        //------------------------------------------------------
                        cbbItemSupplier.setModel(new DefaultComboBoxModel(sdao));//fetch model to combobox
                    } else {
                        JOptionPane.showMessageDialog(this, "user not found");
                        closeConnection();
                        System.exit(0);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "table empty");
                    closeConnection();
                    System.exit(0);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
//==============================================================================
            txtSupCode.setEditable(false);
            txtItemcode.setEditable(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnLayered = new javax.swing.JLayeredPane();
        pnTabs = new javax.swing.JTabbedPane();
        pnSupplier = new javax.swing.JDesktopPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSupCode = new javax.swing.JTextField();
        txtSupName = new javax.swing.JTextField();
        txtSupAddress = new javax.swing.JTextField();
        ckbCollaborating = new javax.swing.JCheckBox();
        btnSupNew = new javax.swing.JButton();
        btnSupSave = new javax.swing.JButton();
        btnSupDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        pnItem = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtItemcode = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        cbbItemSupplier = new javax.swing.JComboBox<>();
        txtItemUnit = new javax.swing.JTextField();
        txtItemPrice = new javax.swing.JTextField();
        ckbItemSupplying = new javax.swing.JCheckBox();
        btnItemNew = new javax.swing.JButton();
        btnItemSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupplierMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSupplier);

        jLabel1.setText("Code:");

        jLabel2.setText("Name:");

        jLabel3.setText("Address:");

        jLabel4.setText("Collaborating:");

        btnSupNew.setText("Add New");
        btnSupNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupNewActionPerformed(evt);
            }
        });

        btnSupSave.setText("Save");
        btnSupSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupSaveActionPerformed(evt);
            }
        });

        btnSupDelete.setText("Delete");
        btnSupDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupDeleteActionPerformed(evt);
            }
        });

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        pnSupplier.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(txtSupCode, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(txtSupName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(txtSupAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(ckbCollaborating, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(btnSupNew, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(btnSupSave, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(btnSupDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnSupplier.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout pnSupplierLayout = new javax.swing.GroupLayout(pnSupplier);
        pnSupplier.setLayout(pnSupplierLayout);
        pnSupplierLayout.setHorizontalGroup(
            pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnSupplierLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnSupplierLayout.createSequentialGroup()
                        .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(42, 42, 42)
                        .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSupCode)
                            .addComponent(txtSupName)
                            .addComponent(txtSupAddress)))
                    .addGroup(pnSupplierLayout.createSequentialGroup()
                        .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addGroup(pnSupplierLayout.createSequentialGroup()
                                .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnSupplierLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(20, 20, 20)
                                        .addComponent(ckbCollaborating))
                                    .addComponent(btnSupNew))
                                .addGap(18, 18, 18)
                                .addComponent(btnSupSave)))
                        .addGap(18, 18, 18)
                        .addComponent(btnSupDelete)
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnSupplierLayout.setVerticalGroup(
            pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSupplierLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnSupplierLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSupAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ckbCollaborating))
                .addGap(18, 18, 18)
                .addGroup(pnSupplierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupNew)
                    .addComponent(btnSupSave)
                    .addComponent(btnSupDelete))
                .addGap(62, 62, 62)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnTabs.addTab("Suppliers", pnSupplier);

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblItem);

        jLabel5.setText("Code:");

        jLabel6.setText("Name:");

        jLabel7.setText("Supplier:");

        jLabel8.setText("Unit:");

        jLabel9.setText("Price:");

        jLabel10.setText("Supplying:");

        cbbItemSupplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnItemNew.setText("Add New");
        btnItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemNewActionPerformed(evt);
            }
        });

        btnItemSave.setText("Save");
        btnItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        pnItem.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(txtItemcode, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(txtItemName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(cbbItemSupplier, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(txtItemUnit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(txtItemPrice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(ckbItemSupplying, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(btnItemNew, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(btnItemSave, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(btnDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pnItem.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout pnItemLayout = new javax.swing.GroupLayout(pnItem);
        pnItem.setLayout(pnItemLayout);
        pnItemLayout.setHorizontalGroup(
            pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnItemLayout.createSequentialGroup()
                        .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(21, 21, 21)
                        .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnItemLayout.createSequentialGroup()
                                .addComponent(ckbItemSupplying)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtItemcode)
                            .addComponent(txtItemName)
                            .addComponent(cbbItemSupplier, 0, 219, Short.MAX_VALUE)
                            .addComponent(txtItemUnit)
                            .addComponent(txtItemPrice)))
                    .addGroup(pnItemLayout.createSequentialGroup()
                        .addComponent(btnItemNew)
                        .addGap(18, 18, 18)
                        .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addGroup(pnItemLayout.createSequentialGroup()
                                .addComponent(btnItemSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)))
                        .addGap(16, 16, 16)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnItemLayout.setVerticalGroup(
            pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnItemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnItemLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtItemcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbbItemSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtItemUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ckbItemSupplying))
                .addGap(18, 18, 18)
                .addGroup(pnItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnItemNew)
                    .addComponent(btnItemSave)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnTabs.addTab("Items", pnItem);

        pnLayered.setLayer(pnTabs, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout pnLayeredLayout = new javax.swing.GroupLayout(pnLayered);
        pnLayered.setLayout(pnLayeredLayout);
        pnLayeredLayout.setHorizontalGroup(
            pnLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLayeredLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnTabs)
                .addContainerGap())
        );
        pnLayeredLayout.setVerticalGroup(
            pnLayeredLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnLayeredLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnTabs)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnLayered)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnLayered)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMouseClicked
        // TODO add your handling code here:
        int position = tblItem.getSelectedRow();
        itemDTO dto = itemModel.getList().get(position);
        txtItemcode.setText(dto.getItemCode());
        txtItemcode.setEditable(false);
        txtItemName.setText(dto.getItemName());
        String supCode = dto.getSupCode();//need to fix
        int index = sdao.find(supCode);//need to fix
        cbbItemSupplier.setSelectedIndex(index);
        txtItemUnit.setText(dto.getUnit());
        txtItemPrice.setText(dto.getPrice() + "");
        ckbItemSupplying.setSelected(dto.isSupplying());
    }//GEN-LAST:event_tblItemMouseClicked

    private void tblSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseClicked
        // TODO add your handling code here:
        int position = tblSupplier.getSelectedRow();
        supplierDTO dto = supModel.getList().get(position);
        txtSupCode.setText(dto.getSupCode());
        txtSupCode.setEditable(false);
        txtSupName.setText(dto.getSupName());
        txtSupAddress.setText(dto.getAddress());
        ckbCollaborating.setSelected(dto.isCollaborating());
    }//GEN-LAST:event_tblSupplierMouseClicked

    private void btnSupNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupNewActionPerformed
        // TODO add your handling code here:
        txtSupCode.setEditable(true);
        txtSupName.setEditable(true);
        txtSupAddress.setEditable(true);
        ckbCollaborating.setEnabled(true);
        txtSupCode.setText("");
        txtSupName.setText("");
        txtSupAddress.setText("");
        ckbCollaborating.setSelected(false);
        switcher1 = true;
    }//GEN-LAST:event_btnSupNewActionPerformed

    private void btnSupSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupSaveActionPerformed
        try {
            if (txtSupCode.getText().equals("")
                    || txtSupName.getText().equals("")
                    || txtSupAddress.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "plz fulfill al the fields");
                switcher1 = false;
            }
            // TODO add your handling code here:
            supplierDAO dao = new supplierDAO();
            String scode = txtSupCode.getText();
            String sname = txtSupName.getText();
            String address = txtSupAddress.getText();
            boolean collaborating = ckbCollaborating.isSelected();
            supplierDTO dto = new supplierDTO(scode, sname, address, collaborating);
            String sql = "";
            if (switcher1 == true) {
                for (int i = 0; i < supModel.getList().size(); i++) {
                    if (scode.equalsIgnoreCase(supModel.getList().get(i).getSupCode())) {
                        JOptionPane.showMessageDialog(this, "record dupplicated");
                        return;
                    } else {
                        sql = "insert into tblSuppliers(supCode,supName,address,collaborating)"
                                + "values ('" + scode + "','" + sname + "','" + address + "','" + collaborating + "')";
                    }
                }
            } else {
                sql = "update tblSuppliers set supName='" + sname + "',address='" + address + "',collaborating='"
                        + collaborating + "' where supCode='" + scode + "'";
            }
            Statement sm = conn.createStatement();
            int n = sm.executeUpdate(sql);
            if (n > 0) {
                if (switcher1 == false) {
                    int position = tblSupplier.getSelectedRow();
                    supModel.getList().set(position, dto);
                    tblSupplier.updateUI();
                    txtSupCode.setText("");
                    txtSupName.setText("");
                    txtSupAddress.setText("");
                    ckbCollaborating.setSelected(false);
                    switcher1 = false;
                } else {
                    supModel.getList().add(dto);
                    tblSupplier.updateUI();
                    txtSupCode.setText("");
                    txtSupName.setText("");
                    txtSupAddress.setText("");
                    ckbCollaborating.setSelected(false);
                    switcher1 = false;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSupSaveActionPerformed

    private void btnSupDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupDeleteActionPerformed
        try {
            // TODO add your handling code here:
            int position = tblSupplier.getSelectedRow();
            String supCode = txtSupCode.getText();
            String sql = "delete from tblSuppliers where supCode='" + supCode + "'";
            Statement sm = conn.createStatement();
            int set = sm.executeUpdate(sql);
            if (set > 0) {
                supModel.getList().removeElementAt(position);
                tblSupplier.updateUI();
                txtSupCode.setText("");
                txtSupName.setText("");
                txtSupAddress.setText("");
                ckbCollaborating.setSelected(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSupDeleteActionPerformed

    private void btnItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemNewActionPerformed
        // TODO add your handling code here:
        switcher2 = true;
        txtItemcode.setEditable(true);
        txtItemName.setEditable(true);
        txtItemUnit.setEditable(true);
        txtItemPrice.setEditable(true);
        ckbItemSupplying.setEnabled(true);
        txtItemcode.setText("");
        txtItemName.setText("");
        txtItemUnit.setText("");
        txtItemPrice.setText("");
        cbbItemSupplier.setSelectedIndex(0);
        ckbItemSupplying.setSelected(false);
    }//GEN-LAST:event_btnItemNewActionPerformed

    private void btnItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemSaveActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if (txtItemcode.getText().equals("")
                    || txtItemName.getText().equals("")
                    || txtItemUnit.getText().equals("")
                    || txtItemPrice.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "plz fulfill al the fields");
                switcher2 = false;
            }
            itemDAO dao = new itemDAO();
            String icode = txtItemcode.getText();
            String iname = txtItemName.getText();
            String unit = txtItemUnit.getText();
            float price = Float.parseFloat(txtItemPrice.getText());
            supplierDTO sup = (supplierDTO) cbbItemSupplier.getSelectedItem();
            String supCode = sup.getSupCode();
            boolean supplying = ckbItemSupplying.isSelected();
            itemDTO dto = new itemDTO(icode, iname, unit, price, supplying, supCode);
            String sql = "";
            if (switcher2 == true) {
                for (int i = 0; i < itemModel.getList().size(); i++) {
                    if (icode.equalsIgnoreCase(itemModel.getList().get(i).getSupCode())) {
                        JOptionPane.showMessageDialog(this, "record dupplicated");
                        return;
                    } else {
                        sql = "insert into tblItems(itemCode,itemName,unit,price,supplying,supCode)"
                                + "values ('" + icode + "','" + iname + "','" + unit + "'," + price + ",'"
                                + supplying + "','" + supCode + "')";
                    }
                }
            } else {
                sql = "update tblItems set itemName='" + iname + "',unit='" + unit + "',price=" + price
                        + ",supplying='" + supplying + "',supCode='" + supCode + "' where itemCode='" + icode + "'";
            }
            Statement sm = conn.createStatement();
            int n = sm.executeUpdate(sql);
            if (n > 0) {
                if (switcher2 == false) {
                    int position = tblSupplier.getSelectedRow();
                    itemModel.getList().set(position, dto);
                    tblItem.updateUI();
                } else {
                    itemModel.getList().add(dto);
                    tblItem.updateUI();
                    switcher2 = false;
                    txtItemcode.setText("");
                    txtItemName.setText("");
                    txtItemUnit.setText("");
                    txtItemPrice.setText("");
                    cbbItemSupplier.setSelectedIndex(0);
                    ckbItemSupplying.setSelected(false);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnItemSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            // TODO add your handling code here:
            int position = tblItem.getSelectedRow();
            String itemCode = txtItemcode.getText();
            String sql = "delete from tblItems where itemCode='" + itemCode + "'";
            Statement sm = conn.createStatement();
            int set = sm.executeUpdate(sql);
            if (set > 0) {
                itemModel.getList().removeElementAt(position);
                tblItem.updateUI();
                txtItemcode.setText("");
                txtItemcode.setEditable(false);
                txtItemName.setText("");
                txtItemUnit.setText("");
                txtItemPrice.setText("");
                cbbItemSupplier.setSelectedIndex(0);
                ckbItemSupplying.setSelected(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new manager().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(manager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnItemNew;
    private javax.swing.JButton btnItemSave;
    private javax.swing.JButton btnSupDelete;
    private javax.swing.JButton btnSupNew;
    private javax.swing.JButton btnSupSave;
    private javax.swing.JComboBox<String> cbbItemSupplier;
    private javax.swing.JCheckBox ckbCollaborating;
    private javax.swing.JCheckBox ckbItemSupplying;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDesktopPane pnItem;
    private javax.swing.JLayeredPane pnLayered;
    private javax.swing.JDesktopPane pnSupplier;
    private javax.swing.JTabbedPane pnTabs;
    private javax.swing.JTable tblItem;
    private javax.swing.JTable tblSupplier;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtItemUnit;
    private javax.swing.JTextField txtItemcode;
    private javax.swing.JTextField txtSupAddress;
    private javax.swing.JTextField txtSupCode;
    private javax.swing.JTextField txtSupName;
    // End of variables declaration//GEN-END:variables
}
